name: CI

# Triggers pipeline when a push is made to any branch
on: [push]

jobs:
  sast_scan:
    name: Run Bandit Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit Scan
        # Save report in JSON format
        run: bandit -ll -ii -r . -f json -o bandit-report.json

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: bandit-findings.json
          path: bandit-report.json

  image_scan:
    name: Build and Run Image Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@v1
        with:
          docker_version: '20.10.7'

      - name: Build Docker Image
        run: docker build -f Dockerfile -t mytestapp:latest .

      - name: Docker Scout Scan
        uses: docker/scout-action@v1.15.1
        with:
          dockerhub-user: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub-password: ${{ secrets.DOCKERHUB_PASSWORD }}
          command: quickview,cves
          only-severities: critical,high
          sarif-file: scout-report.sarif
          exit-code: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: docker-scout-findings
          path: scout-report.sarif

  dast_scan:
    name: DAST Scan
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Python for PyGoat
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
    
      # Install PyGoat dependencies
      - name: Install PyGoat dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Apply migrations
        run: |
          source venv/bin/activate
          python manage.py migrate

      # Deploy PyGoat
      - name: Deploy PyGoat
        run: |
          source venv/bin/activate
          nohup python manage.py runserver &

      # Wait for PyGoat to start
      - name: Wait for PyGoat to start
        run: sleep 15

      # Perform DAST with OWASP ZAP
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.13.0
        with:
          target: http://127.0.0.1:8000
          cmd_options: '-J report_json.json -w report_md.md -r report_html.html'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload DAST findings as an artifact
      - name: Upload OWASP ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: |
            report_json.json
            report_md.md
            report_html.html
